version: '3.1'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`records.devel.mafildb.ics.muni.cz`)"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=mytlschallenge"
    environment:
      - PORT=80
    expose:
      - 80

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./frontend/build:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=false"

  traefik:
    image: traefik:v2.6
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=max.seffer@gmail.com"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: backend.dockerfile
  #   ports:
  #     - '8000:8000'
  #   depends_on:
  #     - db
  # db:
  #   image: postgres:14.6
  #   restart: always
  #   environment:
  #     - POSTGRES_PASSWORD=7695
  #   env_file:
  #     - .env
  #   ports:
  #     - '5432:5432'
  #   volumes:
  #     - ./sql:/docker-entrypoint-initdb.d
  